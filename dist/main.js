!function(){"use strict";class e{constructor(e,t,s){this._place=e.place,this._link=e.link,this._alt=e.alt,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._link,this._alt,this._place)}))}_handleLikeButton(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}getView(){const e=document.querySelector(this._cardSelector);this._cardElement=e.content.firstElementChild.cloneNode(!0);const t=this._cardElement.querySelector(".card__image"),s=this._cardElement.querySelector(".card__caption");return t.src=this._link,t.alt=this._alt,s.textContent=this._place,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._settings=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():(this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._toggleButtonState()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}disableButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._handleMouseDown=this._handleMouseDown.bind(this),this._handleMouseUp=this._handleMouseUp.bind(this),this._isMouseDownOnModal=!1}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleMouseDown(e){e.target.classList.contains("modal_opened")?this._isMouseDownOnModal=!0:this._isMouseDownOnModal=!1}_handleMouseUp(e){this._isMouseDownOnModal&&e.target.classList.contains("modal_opened")&&this.close(e.target),this._isMouseDownOnModal=!1}setEventListeners(){this._popupElement.addEventListener("mousedown",this._handleMouseDown),this._popupElement.addEventListener("mouseup",this._handleMouseUp),this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close()))}}document.querySelector("#card-template").content;const n=document.querySelector("#profile-edit-modal"),o=document.querySelector("#profile-add-modal"),i=document.querySelector("#profile-preview-modal"),a=n.querySelector(".modal__form"),r=o.querySelector(".modal__form"),l=(document.querySelector(".cards__list"),document.querySelector("#profile-edit-button")),c=n.querySelector("#modal-button-close"),u=o.querySelector("#modal-button-close"),d=document.querySelector("#profile-add-button"),m=i.querySelector("#modal-button-close");i.querySelector(".modal__image"),i.querySelector(".modal__heading");const _=document.querySelector("#modal-input-name"),h=document.querySelector("#modal-input-description"),p=r.querySelector("#modal-input-place"),g=r.querySelector("#modal-input-link"),E={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"};new t(E,a),new t(E,r);class v extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputs=Array.from(this._popupForm.querySelectorAll(".modal__input"))}_getInputValues(){return this._inputValues={},this._inputs.forEach((e=>{console.log(`Input Name: ${e.name}, Input Value: ${e.value}`),this._inputValues[e.name]=e.value})),this._inputValues}setEventListeners(){super.setEventListeners(),this._popupForm.removeEventListener("submit",this._submitHandler),this._submitHandler=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())},this._popupForm.addEventListener("submit",this._submitHandler)}close(){super.close(),this._popupForm.reset()}}const f=new t(E,a),w=new t(E,r);f.enableValidation(),w.enableValidation();const y=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:"#profile-name",jobSelector:"#profile-description"}),S=new v("#profile-edit-modal",(function(){console.log("Edit form submit handler called"),console.log("Name:",_.value),console.log("Description:",h.value),y.setUserInfo({name:_.value,job:h.value}),a.reset(),f.resetValidation(),f.disableButton(),S.close()})),b=new v("#profile-add-modal",(function(){const e=q({place:p.value,link:g.value,alt:`Image of ${p.value}`});k.addItem(e),r.reset(),w.resetValidation(),w.disableButton(),b.close()})),L=new class extends s{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__image"),this._place=this._popupElement.querySelector(".modal__heading_type_preview")}open(e,t,s){this._image.src=e,this._image.alt=t,this._place.textContent=s,super.open()}}("#profile-preview-modal");S.setEventListeners(),b.setEventListeners(),L.setEventListeners();const k=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.append(e)}}({items:[{place:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Sunset view of Yosemite Valley with El Capitan visible, river flowing in the foreground surrounded by dense pine trees."},{place:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Calm waters of Lake Louise reflecting the surrounding mountains under a soft blue sky."},{place:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Sunburst peaking over the silhouette of the Bald Mountains at sunrise, casting a warm glow across the hazy, layered ridges."},{place:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Starry night sky over the jagged peaks of Latemar mountain range with remnants of snow highlighting its rugged terrain."},{place:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg",alt:"Twilight hues casting a soft glow on the peaks of Vanoise National Park, reflected in the still waters of a mountain lake."},{place:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg",alt:"Wooden boats moored at a dock on Lago di Braies with towering Dolomite mountains reflecting in the crystal-clear lake water."}],renderer:e=>{const t=q(e);k.addItem(t)}},".cards__list");function q(t){return new e(t,"#card-template",B).getView()}function B(e,t,s){L.open(e,t,s)}l.addEventListener("click",(()=>{const e=y.getUserInfo();console.log("Edit Button Clicked - User Data:",e),_.value=e.name,h.value=e.job,f.resetValidation(),S.open()})),c.addEventListener("click",(()=>S.close())),d.addEventListener("click",(()=>{w.resetValidation(),r.reset(),w.disableButton(),b.open()})),u.addEventListener("click",(()=>b.close())),m.addEventListener("click",(()=>L.close())),i.addEventListener("click",(e=>{e.target===i&&L.close()})),k.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,