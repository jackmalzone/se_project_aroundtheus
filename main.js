!function(){"use strict";class e{constructor(e,t,s){this._place=e.place,this._link=e.link,this._alt=e.alt,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._link,this._alt,this._place)}))}_handleLikeButton(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}getView(){const e=document.querySelector(this._cardSelector);this._cardElement=e.content.firstElementChild.cloneNode(!0);const t=this._cardElement.querySelector(".card__image"),s=this._cardElement.querySelector(".card__caption");return t.src=this._link,t.alt=this._alt,s.textContent=this._place,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._settings=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():(this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._toggleButtonState()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}disableButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._handleMouseDown=this._handleMouseDown.bind(this),this._handleMouseUp=this._handleMouseUp.bind(this),this._isMouseDownOnModal=!1}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleMouseDown(e){e.target.classList.contains("modal_opened")?this._isMouseDownOnModal=!0:this._isMouseDownOnModal=!1}_handleMouseUp(e){this._isMouseDownOnModal&&e.target.classList.contains("modal_opened")&&this.close(e.target),this._isMouseDownOnModal=!1}setEventListeners(){this._popupElement.addEventListener("mousedown",this._handleMouseDown),this._popupElement.addEventListener("mouseup",this._handleMouseUp),this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close()))}}class n extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputs=Array.from(this._popupForm.querySelectorAll(".modal__input"))}_getInputValues(){return this._inputValues={},this._inputs.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setEventListeners(){super.setEventListeners(),this._submitHandler=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()},this._popupForm.addEventListener("submit",this._submitHandler)}}document.querySelector("#card-template").content;const o=document.querySelector("#profile-edit-modal"),i=document.querySelector("#profile-add-modal"),r=document.querySelector("#profile-preview-modal"),a=o.querySelector(".modal__form"),l=i.querySelector(".modal__form"),c=(document.querySelector(".cards__list"),document.querySelector("#profile-edit-button")),u=(o.querySelector("#modal-button-close"),i.querySelector("#modal-button-close"),document.querySelector("#profile-add-button"));r.querySelector("#modal-button-close"),r.querySelector(".modal__image"),r.querySelector(".modal__heading");const d=document.querySelector("#modal-input-name"),m=document.querySelector("#modal-input-description"),_=(l.querySelector("#modal-input-place"),l.querySelector("#modal-input-link"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"}),h=new t(_,a),p=new t(_,l);h.enableValidation(),p.enableValidation();const g=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:"#profile-name",jobSelector:"#profile-description"}),E=new n("#profile-edit-modal",(function(e){g.setUserInfo({name:e.title,job:e.description}),a.reset(),h.disableButton(),E.close()})),f=new n("#profile-add-modal",(function(e){const t=S({place:e.place,link:e.link,alt:`Image of ${e.place}`});y.addItem(t),l.reset(),p.disableButton(),f.close()})),w=new class extends s{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__image"),this._place=this._popupElement.querySelector(".modal__heading_type_preview")}open(e,t,s){this._image.src=e,this._image.alt=t,this._place.textContent=s,super.open()}}("#profile-preview-modal");E.setEventListeners(),f.setEventListeners(),w.setEventListeners();const y=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{place:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Sunset view of Yosemite Valley with El Capitan visible, river flowing in the foreground surrounded by dense pine trees."},{place:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Calm waters of Lake Louise reflecting the surrounding mountains under a soft blue sky."},{place:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Sunburst peaking over the silhouette of the Bald Mountains at sunrise, casting a warm glow across the hazy, layered ridges."},{place:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Starry night sky over the jagged peaks of Latemar mountain range with remnants of snow highlighting its rugged terrain."},{place:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg",alt:"Twilight hues casting a soft glow on the peaks of Vanoise National Park, reflected in the still waters of a mountain lake."},{place:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg",alt:"Wooden boats moored at a dock on Lago di Braies with towering Dolomite mountains reflecting in the crystal-clear lake water."}],renderer:e=>{const t=S(e);y.addItem(t,!0)}},".cards__list");function S(t){return new e(t,"#card-template",v).getView()}function v(e,t,s){w.open(e,t,s)}c.addEventListener("click",(()=>{const e=g.getUserInfo();d.value=e.name,m.value=e.job,h.resetValidation(),E.open()})),u.addEventListener("click",(()=>{f.open()})),y.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,